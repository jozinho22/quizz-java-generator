[
	{
		"text": "Quel sont les trois grands principes de la POO ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "L'encapsulation, l'héritage et le polymorphisme",
				"goodAnswer": true
			},
			{
				"text": "L'encapsulation, l'héritage multiple et le polymorphisme",
				"goodAnswer": false
			},
			{
				"text": "Le multi-threading, l'accès aux données et le polymorphisme",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "En quoi consiste la compilation du code ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Au fait de compresser toutes les classes afin de réduire la taille du projet",
				"goodAnswer": false
			},
			{
				"text": "À la transformation du code Java en byte code interprétable par la JVM",
				"goodAnswer": true
			},
			{
				"text": "Au fait de réaligner toutes les lignes de chaque classe afin de rendre le code lisible",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quel est le gros apport de Java 8 ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Les classes anonymes et les streams",
				"goodAnswer": false
			},
			{
				"text": "Les lambdas et streams",
				"goodAnswer": true
			},
			{
				"text": "Les lambdas et classes anonymes",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est-ce qu'une expression lambda ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Une expression quelconque",
				"goodAnswer": false
			},
			{
				"text": "Une expression avec un stream",
				"goodAnswer": false
			},
			{
				"text": "Une expression remplaçant la création d'une classe anonyme",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Comment nomme-t-on une expression de ce type <java>MonInterface maMethode = x -> x * x;</java> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Une référence de méthode",
				"goodAnswer": false
			},
			{
				"text": "Un stream",
				"goodAnswer": false
			},
			{
				"text": "Un lambda",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Qu'est-ce qu'une interface fonctionnelle ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Une interface ne comportant qu'une seule méthode abstraite",
				"goodAnswer": true
			},
			{
				"text": "Une interface implémentant l'interface Runnable",
				"goodAnswer": false
			},
			{
				"text": "Une interface comportant au moins une méthode implémentée par défault",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la condition pour lancer un thread ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Implémenter l'interface Runnable",
				"goodAnswer": true
			},
			{
				"text": "Hériter de la classe Thread",
				"goodAnswer": false
			},
			{
				"text": "Hériter de la classe Runnable",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Comment nomme-t-on l'expression suivante <code>System.out::println</code> dans le code suivant ? <java>list.forEach(System.out::println);</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Une référence de méthode",
				"goodAnswer": true
			},
			{
				"text": "Un expression lambda",
				"goodAnswer": false
			},
			{
				"text": "Un stream",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "À quoi sert la méthode <code>list.stream.map(x -> x + x)</code> d'un stream ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Elle va trier les éléments selon le résultat de <code>x + x</code>",
				"goodAnswer": false
			},
			{
				"text": "Elle fait correspondre une valeur <code>x + x</code> à chaque élément <code>x</code>",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quel interface implémente la classe ArrayList ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "List",
				"goodAnswer": true
			},
			{
				"text": "Queue",
				"goodAnswer": false
			},
			{
				"text": "Serializable",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie réellement Deque ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Deserialized Queue",
				"goodAnswer": false
			},
			{
				"text": "Desynchronized Queue",
				"goodAnswer": false
			},
						{
				"text": "Double-Ended Queue",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "De quelle interface hérite l'interface Collection ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Iterable",
				"goodAnswer": true
			},
			{
				"text": "Serializable",
				"goodAnswer": false
			},
						{
				"text": "List",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle exception doit-on implémenter avec un <code>try</code>/<code>catch</code> ou une déclaration dans la signature de méthode pour que ce bout de code fonctionne ? <java>FileReader reader = new FileReader();</java><java>File jsonFile = reader.getFile(\"myFile.json\");</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "java.io.IOException",
				"goodAnswer": true
			},
			{
				"text": "java.io.FileNotFoundException",
				"goodAnswer": false
			},
						{
				"text": "javax.json.JsonException",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "À quoi correspond ce bout de code ?<java>List<BigDecimal> list = personnes</java><java1>.stream()</java1><java1>.map(p -> new BigDecimal(p.getPoids() / (Math.pow(p.getTaille(), 2))))</java1><java1>.collect(Collectors.toList())</java1><java1>;</java1><java>return list;</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "À un calcul de ROI",
				"goodAnswer": false
			},
			{
				"text": "À un calcul d'IMC'",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quel est le principal avantage de l'interface Set par rapport à l'interface List ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Elle permet daccepter des doublons",
				"goodAnswer": true
			},
			{
				"text": "Elle permet une flexibilité des entrées",
				"goodAnswer": false
			},
			{
				"text": "Elle permet de ne pas accepter de doublons",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que va retourner ce bout de code ?<java>int i = Arrays</java><java1>.stream(integers)</java1><java1>.reduce(0, (a, b) -> a > b ? a : b);</java1><java>return i;</java></java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Un minimum",
				"goodAnswer": false
			},
			{
				"text": "Un maximum",
				"goodAnswer": true
			},
			{
				"text": "Une médiane",
				"goodAnswer": false
			}
		]
	},
	{
	"text": "Que va retourner ce bout de code ?<java>int i = Arrays</java><java1>.stream(integers)</java1><java1>.reduce(0, (a, b) -> a < b ? a : b);</java1><java>return i;</java></java>",
	"topicKey": "JAVA",
	"answers": [
		{
			"text": "Un minimum",
			"goodAnswer": true
		},
		{
			"text": "Un maximum",
			"goodAnswer": false
		},
		{
			"text": "Une médiane",
			"goodAnswer": false
		}
	]
	},
	{
		"text": "Quelles interfaces implémente la classe LinkedList ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "List et Set",
				"goodAnswer": false
			},
			{
				"text": "List et Queue",
				"goodAnswer": true
			},
			{
				"text": "Set et Queue",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que retourne ce bout de code ?<java>List<Personne> result = personnes</java><java1>.stream()</java1><java1>.sorted(Comparator.comparing(Personne::getAge).reversed())</java1><java1>.collect(Collectors.toList());</java1><java>return result;</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Un tri croissant selon l'âge des personnes présentes",
				"goodAnswer": false
			},
			{
				"text": "Un tri décroissant selon l'âge des personnes présentes",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que retourne ce bout de code ?<java>List<Personne> result = personnes</java><java1>.stream()</java1><java1>.sorted(Comparator.comparing(Personne::getAge))</java1><java1>.collect(Collectors.toList());</java1><java>return result;</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Un tri croissant selon l'âge des personnes présentes",
				"goodAnswer": true
			},
			{
				"text": "Un tri décroissant selon l'âge des personnes présentes",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est une des utilités de la classe Integer par rapport à un int primitif ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "C'est Thread-safe",
				"goodAnswer": false
			},
			{
				"text": "Cela augmente la performance de traitement",
				"goodAnswer": false
			},
			{
				"text": "Cela permet de créer des listes de nombres entiers",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Comment appelle-ton ceci ?<java>return personnes</java><java1>.stream()</java1><java1>.collect(Collectors.groupingBy(Personne::getGenre));</java1>\n",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Un tri",
				"goodAnswer": false
			},
			{
				"text": "Un filtre",
				"goodAnswer": false
			},
			{
				"text": "De la discrimination (lol)",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quel sont les avantages à utiliser la classe Vector plutôt que la classe List ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Elle est plus rapide",
				"goodAnswer": false
			},
			{
				"text": "Elle est synchronisée et permet d'itérer sur un Enum",
				"goodAnswer": true
			},
			{
				"text": "Elle a plus de capacité",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quel est l'avantage de la class Stack par rapport à la classe Vector dont elle hérite ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Elle est plus rapide parce que non-synchronisée",
				"goodAnswer": false
			},
			{
				"text": "Elle contient des méthodes supplémentaires pouvant effectuer du LIFO (Last In First Out)",
				"goodAnswer": true
			},
			{
				"text": "Elle a plus de capacité",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la classe mère de toutes les classes ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Class",
				"goodAnswer": false
			},
			{
				"text": "Object",
				"goodAnswer": true
			},
			{
				"text": "Pojo",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la principe d'une Map ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Elle référence un objet grâce à son hashcode()",
				"goodAnswer": false
			},
			{
				"text": "Elle permet de stocker des objets à un autre emplacement mémoire",
				"goodAnswer": false
			},
			{
				"text": "Elle référence un object grâce à une clé",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelle est la différence entre un JDK et une JRE ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Un JDK est un kit de développement et une JRE est une plate-forme d'exécution",
				"goodAnswer": false
			},
			{
				"text": "Un JDK est un kit de développement contenant une JRE et une JRE est une plate-forme d'exécution",
				"goodAnswer": true
			},
			{
				"text": "Un JDK est un kit de développement et une JRE est une plate-forme d'exécution contenant une JDK",
				"goodAnswer": false
			}
		]
	}
	,
	{
		"text": "La classe <code>Chat</code> héritant de la classe <code>Felin</code>, peut-on écrire le code suivant ? <java>Felin c = new Chat();</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Oui",
				"goodAnswer": true
			},
			{
				"text": "Non",
				"goodAnswer": false
			},
			{
				"text": "Ça dépend",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "La classe <code>Chat</code> héritant de la classe <code>Felin</code>, peut-on écrire le code suivant ? <java>Chat c = new Felin();</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Oui",
				"goodAnswer": false
			},
			{
				"text": "Non",
				"goodAnswer": true
			},
			{
				"text": "Ça dépend",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "La classe <code>Chat</code> héritant de la classe <code>Felin</code>, peut-on écrire le code suivant ? <java>Chat c = (Chat) new Felin();</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Oui",
				"goodAnswer": false
			},
			{
				"text": "Non",
				"goodAnswer": true
			},
			{
				"text": "Ça dépend",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Peut-on utiliser une variable de type interface ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Non",
				"goodAnswer": false
			},
			{
				"text": "Oui",
				"goodAnswer": true
			},
			{
				"text": "Ça dépend",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "À quoi sert l'interface Serializable ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Elle met à disposition un framework permettant de serialiser/désérialiser avec un fichier *.json en entrée",
				"goodAnswer": false
			},
			{
				"text": "Elle permet de convertir une instance en un format de manière à pouvoir l'écrire sur le disque",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelles sont les deux nouveautés de Java 8 utilisées dans ce code ? <java>List<Personne> listFiltree = personnes</java><java1>.stream()</java1><java1>.filter(Personne::isOver70kg)</java1><java1>.collect(Collectors.toList());</java1><javaReturn>return listFiltree;</javaReturn>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Un stream et un lambda",
				"goodAnswer": false
			},
			{
				"text": "Un stream et une référence de méthode",
				"goodAnswer": true
			},
			{
				"text": "Un lambda et une référence de méthode",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelles sont les deux nouveautés de Java 8 utilisées dans ce code ? <java>List<Personne> listFiltree = personnes</java><java1>.stream()</java1><java1>.filter(p -> p.getAge() > 30)</java1><java1>.collect(Collectors.toList());</java1><javaReturn>return listFiltree;</javaReturn>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Un stream et un lambda",
				"goodAnswer": true
			},
			{
				"text": "Un stream et une référence de méthode",
				"goodAnswer": false
			},
			{
				"text": "Un lambda et une référence de méthode",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "À quoi sert la méthode <code>java.util.stream.Stream.map(Function<? super T,? extends R> mapper)</code> ? ",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "À mapper une liste avec une autre liste",
				"goodAnswer": false
			},
			{
				"text": "À transformer des éléments d'une liste selon une fonction appliquée aux éléments de la liste",
				"goodAnswer": true
			},
			{
				"text": "À filtrer des éléments d'une liste selon un prédicat",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que doit-on ajouter à une classe implémentant l'interface Serializable ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Rien",
				"goodAnswer": false
			},
			{
				"text": "On va devoir redéfinir les méthodes de l'interface",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que se passe-t-il lorsqu'on oublie de mentionner les mots-clefs public et abstract dans lé déclaration des méthodes d'une interface ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Il y aura une erreur de compilation",
				"goodAnswer": false
			},
			{
				"text": "Il y aura une erreur d'exécution",
				"goodAnswer": false
			},
			{
				"text": "Rien",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quel est le contrat passé entre une interface et une classe qui l'implémente ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Elle doit obligatoirement redéfinir les méthodes de l'interface",
				"goodAnswer": true
			},
			{
				"text": "Elle doit obligatoirement redéfinir les méthodes et constantes de l'interface",
				"goodAnswer": false
			},
			{
				"text": "Elle doit au moins utiliser une des méthodes de l'interface",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "I est une interface implémentée par les classes A et B, peut-on écrire le code suivant ? <java>I[] tab;</code><code>tab = new I[2];</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Oui",
				"goodAnswer": true
			},
			{
				"text": "Non",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Peut-on définir des méthodes dans une interface ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Oui",
				"goodAnswer": true
			},
			{
				"text": "Non",
				"goodAnswer": false
			},
			{
				"text": "Ça dépend",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie Pojo ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "<none>Plain Old Java Object",
				"goodAnswer": true
			},
			{
				"text": "Programmation Orientée Jar Objet",
				"goodAnswer": false
			},
			{
				"text": "Programming Object by Java Organization",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quel est la définition d'une classe abstraite ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Une classe qui contient au moins une méthode abstraite",
				"goodAnswer": true
			},
			{
				"text": "Une classe qui hérite d'une classe fille",
				"goodAnswer": false
			},
			{
				"text": "Une classe qui ne contient pas d'attribut",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la définition d'une interface ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Une classe qui masque d'autres classes filles",
				"goodAnswer": false
			},
			{
				"text": "Une classe qui ne contient que des méthodes abstraites",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que signifie les mots-clefs final static appliqués à un attribut d'une classe ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Que l'attribut ne peut pas être instancié",
				"goodAnswer": false
			},
			{
				"text": "Que l'attribut pourra être appelé uniquement après avoir instancier la classe",
				"goodAnswer": false
			},
			{
				"text": "Que l'attribut sera une constante",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que signifie le mot-clef static appliqué à une méthode d'une classe ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Que la méthode pourra être appelée sans instancier la classe",
				"goodAnswer": true
			},
			{
				"text": "Que la méthode ne pourra pas être modifiée",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que se passe-t-il au niveau mémoire avec le code suivant ? <java>String s = \"Hello\"; </java> <java> String s2 = \"World\";</java><java> String s3 = s1 + s1;</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Un nouvel objet sera créée avec une référence à la chaîne de caractère \"HelloWorld\"",
				"goodAnswer": true
			},
			{
				"text": "Aucun nouvel objet sera créé pour s3 car les deux objets existent déjà",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Peut-on modifier une chaîne de caractère ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Oui",
				"goodAnswer": false
			},
			{
				"text": "Non",
				"goodAnswer": true
			},
			{
				"text": "Ça dépend du compilateur",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que renvoie l'expression suivante ? <java> String s = \"Hello\"; </java> <java> String s2 = \"Hello\";</java> <javaReturn>return (s1 == s2);</javaReturn>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "true",
				"goodAnswer": false
			},
			{
				"text": "false",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que renvoie l'expression suivante ? <java> String s = \"Hello\"; </java> <java> String s2 = \"Hello\";</java> <javaReturn> return (s1.equals(s2)); </javaReturn>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "true",
				"goodAnswer": true
			},
			{
				"text": "false",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle sera la valeur affichée dans la console ? <java>String s = \"HelloWorld\";</java><java>s.substring(0, 5);</java> <javaCR></javaCR> <java>System.out.println(s);</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "HelloWorld",
				"goodAnswer": true
			},
			{
				"text": "Hello",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle sera la valeur affichée dans la console ? <java>int[] arr = {5, 8, 9, 13, 2};</java> <java>arr = Arrays.copyOfRange(arr, 2, arr.length); </java> <java>System.out.println(arr);</java> ",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "I@[hashcode]",
				"goodAnswer": true
			},
			{
				"text": "[9, 13, 2]",
				"goodAnswer": false
			},
			{
				"text": "[8, 9, 13, 2]",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle sera la valeur affichée dans la console ? <java>int[] arr = {24, 9, 6, 14, 143, 13};</java> <java>arr = Arrays.copyOfRange(arr, 5, arr.length); </java> <java>for(int k : arr) {</java> <java1>System.out.print(k);</java1><java>}</java> ",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "14313",
				"goodAnswer": false
			},
			{
				"text": "13",
				"goodAnswer": true
			},
			{
				"text": "Une exception de type <code>ArrayIndexOutOfBoundsException</code> sera levée",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle sera la valeur affichée dans la console ? <java>int[] arr = {45, 7, 4, 15, 12, 147, 8};</java> <java>Arrays.copyOfRange(arr, 6, arr.length); </java> <java>for(int k : arr) {</java> <java1>System.out.print(k);</java1><java>}</java> ",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "457415121478",
				"goodAnswer": true
			},
			{
				"text": "8",
				"goodAnswer": false
			},
			{
				"text": "Une exception de type ArrayIndexOutOfBoundsException sera levée",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle sera la valeur affichée dans la console ? <java>String s = \"HelloWorld\";</java><javaCR></javaCR><java>if(s.contains(\"World\")) {</java> <java1>s.replace(\"World\", \"Land\");</java1><java>}</java> <javaCR></javaCR><java>System.out.println(s);</java> ",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "HelloWorld",
				"goodAnswer": true
			},
			{
				"text": "HelloLand",
				"goodAnswer": false
			},
			{
				"text": "Il y aura une exception de type NoNewStringDefined",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle sera la valeur affichée dans la console ? <java>String s = \"HelloWorld\";</java><java>s.indexOf(\"World\");</java> <javaCR></javaCR> <java>System.out.println(s);</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "HelloWorld",
				"goodAnswer": true
			},
			{
				"text": "Hello",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle sera la valeur affichée dans la console ? <java>int k = 12;</java><java>int l = 22;</java><java>float j = k * l;</java><javaCR></javaCR><java>System.out.println(j);</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "264",
				"goodAnswer": false
			},
				{
				"text": "264.0",
				"goodAnswer": true
			},
			{
				"text": "Il y aura une erreur de compilation",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle sera la valeur affichée dans la console ? <java>float k = 13;</java><java>float l = 25;</java><java>int j = k * l;</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "325",
				"goodAnswer": false
			},
				{
				"text": "325.0",
				"goodAnswer": false
			},
			{
				"text": "Il y aura une erreur de compilation",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelle sera la valeur affichée dans la console ? <java>int[] integers = new int[5];</java> <javaCR></javaCR> <java>for(int k = 0 ; k < integers.length ; k++) {</java><java1>System.out.print(k);</java1><java>}</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "01234",
				"goodAnswer": true
			},
				{
				"text": "12345",
				"goodAnswer": false
			},
			{
				"text": "On aura une exception de type ArrayIndexOutOfBoundsException",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle sera la valeur affichée dans la console ? <java>int[] integers = new int[3];</java> <java>integers[0] = 1; integers [1] = 3; integers [2] = 5; </java><javaCR></javaCR> <java>for(int k = 0 ; k < integers.length; k++) {</java><java1>System.out.print(integers[k+1]);</java1><java>}</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "012",
				"goodAnswer": false
			},
				{
				"text": "135",
				"goodAnswer": false
			},
			{
				"text": "On aura une exception de type ArrayIndexOutOfBoundsException",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que fait le méthode <code>a.equals(b)</code> pour <code>a</code> et <code>b</code> non nuls ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Elle compare les <code>hashcode()</code> de <code>a</code> et <code>b</code> et renvoie <code>true</code> s'ils sont équivalents",
				"goodAnswer": true
			},
			{
				"text": "Elle compare <code>a</code> et <code>b</code> et renvoie <code>true</code> s'ils sont équivalents",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie le mot-clef private pour un attribut de classe ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Que l'attribut ne sera visible que depuis les classes du même package",
				"goodAnswer": false
			},
			{
				"text": "Que l'attribut ne sera visible que depuis la classe",
				"goodAnswer": true
			},
			{
				"text": "Que l'attribut ne sera visible que depuis la classe et les classes du même package",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie l'encapsulation ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Que les attributs et méthodes sont contenues dans des classes, eux-mêmes dans des packages",
				"goodAnswer": false
			},
			{
				"text": "Que le Java encapsule toutes ses classes dans le JDK",
				"goodAnswer": false
			},
			{
				"text": "Que les attributs privés d'une classe ne peuvent être accédés que par une méthode de classe",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quel est léquivalent de lannotation <code>@javax.inject.Named</code> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "<code>@org.springframework.stereotype.Component</code>",
				"goodAnswer": true
			},
			{
				"text": "<code>@org.springframework.beans.factory.annotation.Autowired</code>",
				"goodAnswer": false
			},
			{
				"text": "<code>@javax.inject.Inject</code>",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'affiche le code suivant ? <java>String s = \"HelloWorld\"; </java> <java> s.replace(s, \"HelloLand\"); </java> <java>System.out.println(s);</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "HelloWorld",
				"goodAnswer": true
			},
			{
				"text": "HelloLand",
				"goodAnswer": false
			},
			{
				"text": "null",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'a pour but le code suivant ? <java>public static void main(String args[]) {...}</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Ne pas avoir à se soucier du retour de la méthode",
				"goodAnswer": false
			},
			{
				"text": "Exécuter une simple méthode sans avoir à instancier la classe",
				"goodAnswer": false
			},
			{
				"text": "Démarrer un programme Java avec un nombre d'arguments indéfinis",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelle est la différence entre StringBuffer et StringBuilder ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "StringBuffer est synchronisée donc plus lente",
				"goodAnswer": true
			},
			{
				"text": "StringBuffer est @Deprecated",
				"goodAnswer": false
			}
		]
	},
	
	{
		"text": "Que pourrait signifier l'acronyme JAVA ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Just Another Virtual Acknowledgement",
				"goodAnswer": false
			},
			{
				"text": "Just Another Vague Acronyme",
				"goodAnswer": true
			},
			{
				"text": "Just Another Virtual Acronyme",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie JSR ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Java System Requests",
				"goodAnswer": false
			},
			{
				"text": "Java Specification Requests",
				"goodAnswer": true
			},
			{
				"text": "Java Studio Records",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que fait le mot-clef break dans la boucle suivante ? <java>for(int k = 0; k < 10 ; k++) { </java> <java1> if([conditions]) { </java1> <java2> [instructions];</java2> <java2>break;</java2> <java1>}</java1><java>}</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Il annule l'instruction faite à l'élément k",
				"goodAnswer": false
			},
			{
				"text": "Il passe directement à l'élément (k + 1)",
				"goodAnswer": false
			},
			{
				"text": "Il interromp le déroulement de la boucle en passant à l'instruction (k + 1)",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que fait le mot-clef continue dans la boucle suivante ? <java>for(int k = 0; k < 10 ; k++) {</java><java1> if([conditions]) {</java1> <java2>[instructions];</java2> <java2> continue;</java2><java1>}</java1> <java>}</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Il annule l'instruction faite à l'élément k et passe à l'élément (k + 1) ",
				"goodAnswer": false
			},
			{
				"text": "Il passe à l'élément (k + 1)",
				"goodAnswer": true
			},
			{
				"text": "Il interromp le déroulement de la boucle en passant à l'instruction (k + 1)",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Ces deux boucles sont elles équivalentes ? <java>int[] tab = new int[3];</java> <javaCR></javaCR> <java>for(int k = 0; k < tab.length ; k++) {</java> <java1> System.out.println(tab[k];</java1><java>}</java> <javaCR></javaCR> <java> for(int i : tab) {</java> <java1> System.out.println(i);</java1><java>}</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Il annule l'instruction faite à l'élément k et passe à l'élément (k + 1) ",
				"goodAnswer": false
			},
			{
				"text": "Il passe à l'élément (k + 1)",
				"goodAnswer": true
			},
			{
				"text": "Il interromp le déroulement de la boucle en passant à l'instruction (k + 1)",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle sera le résultat de la variable <code>m</code> à la fin de ce programme ? <java>int k;</java> <java> int l = 5;</java><javaCR></javaCR> <java>if(l > 0) { </java> <java1>int m = k * l;</java1> <java>}</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Une erreur de compilation va se produire",
				"goodAnswer": true
			},
			{
				"text": "0",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "De quelle manière se transmet l'information en Java",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Par valeur",
				"goodAnswer": true
			},
			{
				"text": "Par référence",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Peut-on écrire le code suivant ? <java>for(int k = 0; k < list.length ; k++) {</java> <java1>[instructions]</java1><java>}</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Oui",
				"goodAnswer": false
			},
			{
				"text": "Non",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que signifie <code>class Lion extends Felin</code> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Que la classe <code>Lion</code> va devoir implémenter les méthodes que la classe <code>Felin</code> n'a pas implémenté",
				"goodAnswer": false
			},
			{
				"text": "Que la classe <code>Lion</code> va hériter des champs et méthodes private de la classe <code>Felin</code>",
				"goodAnswer": false
			},
			{
				"text": "Que la classe <code>Lion</code> va hériter des champs et méthodes protected de la classe <code>Felin</code>",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que fait le code suivant ? <java>System.out.println(\"Hello World\");</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Il va logger \"Hello World\" dans un fichier de logs",
				"goodAnswer": false
			},
			{
				"text": "Il va logger \"Hello World\" dans la console",
				"goodAnswer": true
			},
			{
				"text": "Il va logger \"Hello World\" dans la console dans une nouvelle ligne",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la différence entre <code>throws</code> et <code>throw</code> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "<code>throws</code> se place en déclaration de méthode tandis que <code>throw</code> lève une exception ponctuelle",
				"goodAnswer": false
			},
			{
				"text": "<code>throws</code> lève une exception ponctuelle tandis que <code>throw</code> lève une Exception générale",
				"goodAnswer": false
			},
			{
				"text": "<code>throws</code> lève une exception ponctuelle tandis que <code>throw</code> se place en déclaration de méthode",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Peut-on déclarer directement des variables comme ceci ? <java>int i, j, k;</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Oui",
				"goodAnswer": true
			},
			{
				"text": "Non",
				"goodAnswer": false
			},
			{
				"text": "Ça dépend",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la valeur de Byte.<i>MIN_VALUE</i> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "-128",
				"goodAnswer": true
			},
			{
				"text": "-32 768",
				"goodAnswer": false
			},
			{
				"text": "-9 223 372 036 854 775 808",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la valeur de Byte.<i>MAX_VALUE</i> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "127",
				"goodAnswer": true
			},
			{
				"text": "32 767",
				"goodAnswer": false
			},
			{
				"text": "2 147 483 647",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la valeur de Short.<i>MIN_VALUE</i> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "-128",
				"goodAnswer": false
			},
			{
				"text": "-32 768",
				"goodAnswer": true
			},
			{
				"text": "-2 147 483 648",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la valeur de Short.<i>MAX_VALUE</i> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "127",
				"goodAnswer": false
			},
			{
				"text": "32 767",
				"goodAnswer": true
			},
			{
				"text": "2 147 483 647",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie l'annotation @Override sur une méthode ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Que la méthode est une méthode surchargée",
				"goodAnswer": false
			},
			{
				"text": "Que la méthode est une rédéfinition",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelle est l'avantage du polymorphisme ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Il permet de transformer les objets en d'autres objets",
				"goodAnswer": false
			},
			{
				"text": "Il permet de manipuler des objets sans en connaître (tout à fait) le type",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Qu'affiche la méthode <code>toString(Object o)</code> si l'on oublie de la rédéfinir ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Elle affiche le type de l'objet ainsi qu'un nombre aléatoire",
				"goodAnswer": false
			},
			{
				"text": "Elle affiche le type de l'objet ainsi que son hashcode()",
				"goodAnswer": true
			},
			{
				"text": "Elle affiche le type de l'objet ainsi que son id",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est-ce qu'une méthode finale ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Une classe qui ne sera instanciée qu'une seule fois",
				"goodAnswer": false
			},
			{
				"text": "Une classe non dérivable",
				"goodAnswer": true
			},
			{
				"text": "Une classe qui ne pourra pas être instanciée",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la valeur de Integer.<i>MIN_VALUE</i> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "-128",
				"goodAnswer": false
			},
			{
				"text": "-2 147 483 648",
				"goodAnswer": true
			},
			{
				"text": "-9 223 372 036 854 775 808",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la valeur de Integer.<i>MAX_VALUE</i> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "127",
				"goodAnswer": false
			},
			{
				"text": "2 147 483 647",
				"goodAnswer": true
			},
			{
				"text": "9 223 372 036 854 775 807",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la valeur de Long.<i>MIN_VALUE</i> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "-32 768",
				"goodAnswer": false
			},
			{
				"text": "-2 147 483 648",
				"goodAnswer": false
			},
			{
				"text": "-9 223 372 036 854 775 808",
				"goodAnswer": true
			}
		]
	},{
		"text": "Quelle est la valeur de Integer.<i>MAX_VALUE</i> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "127",
				"goodAnswer": false
			},
			{
				"text": "2 147 483 647",
				"goodAnswer": false
			},
			{
				"text": "9 223 372 036 854 775 807",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelle est la valeur de Float.<i>MIN_VALUE</i> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "-9 223 372 036 854 775 808",
				"goodAnswer": false
			},
			{
				"text": "1.402 389 460 E- 45",
				"goodAnswer": true
			},
			{
				"text": "4.940 656 458 412 465 400 E -324",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la valeur de Float.<i>MAX_VALUE</i> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "9 223 372 036 854 775 807",
				"goodAnswer": false
			},
			{
				"text": "3.402 824 700 E 38",
				"goodAnswer": true
			},
			{
				"text": "1.797 693 134 862 316 E 308",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la valeur de Double.<i>MIN_VALUE</i> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "-9 223 372 036 854 775 808",
				"goodAnswer": false
			},
			{
				"text": "1.402 389 460 E- 45",
				"goodAnswer": false
			},
			{
				"text": "4.940 656 458 412 4654 E -324",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelle est la valeur de Double.<i>MAX_VALUE</i> ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "9 223 372 036 854 775 807",
				"goodAnswer": false
			},
			{
				"text": "3.402 824 700 E 38",
				"goodAnswer": false
			},
			{
				"text": "1.797 693 134 862 316 E 308",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelle est le type de k lors de l'opération suivante ? <java>int i = 4, long j = 5;</java><java> int k = i * j;</java>",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "int",
				"goodAnswer": false
			},
			{
				"text": "long",
				"goodAnswer": true
			},
			{
				"text": "Il y aura une erreur de compilation",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle syntaxe utilisée pour afficher des données Java dans une page HTML avec la JSTL ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "${object.attribute}",
				"goodAnswer": true
			},
			{
				"text": "#{object.attribute}",
				"goodAnswer": false
			},
			{
				"text": "#{object.getAttribute()}",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie le mot-clef protected pour un attribut de classe ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Que l'attribut ne sera visible que depuis les classes qui héritent de la classe",
				"goodAnswer": false
			},
			{
				"text": "Que l'attribut ne sera visible que depuis les classes qui héritent de la classe et les classes du même package",
				"goodAnswer": true
			},
			{
				"text": "Que l'attribut ne sera visible que depuis la classe et les classes du même package",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie le code public static void devant une méthode",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "La méthode peut être appelée depuis n'importe quelle classe, seulement avec une instance de la classe et sans retour",
				"goodAnswer": false
			},
			{
				"text": "La méthode ne peut être appelée depuis n'importe quelle classe, sans instancier la classe et sans retour",
				"goodAnswer": false
			},
			{
				"text": "La méthode peut être appelée depuis n'importe quelle classe, sans instancier la classe et sans retour",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quand est-ce que cette condition est vérifiée ?  <java>if( i % 2 == 0 ) { ... } </java> ",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Si i est divisible par 2",
				"goodAnswer": true
			},
			{
				"text": "Si i = 0",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie le mot-clef default dans la signature d'une méthode d'une interface ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "C'est un mot-clef facultatif",
				"goodAnswer": false
			},
			{
				"text": "Que la méthode sera implémentée par défaut",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Peut-on redéclarer une méthode implémentée par défaut dans une interface dans la classe qui l'implémente ?",
		"topicKey": "JAVA",
		"answers": [
			{
				"text": "Oui",
				"goodAnswer": true
			},
			{
				"text": "Non",
				"goodAnswer": false
			},
			{
				"text": "Ça dépend",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie l'annotation <code>@org.springframework.stereotype.Service</code> ?",
		"topicKey": "SPRING",
		"answers": [
			{
				"text": "Que la classe sera un Singleton géré par Spring dédié à des services",
				"goodAnswer": true
			},
			{
				"text": "Que la classe héritera de la classe Service de Spring",
				"goodAnswer": false
			},
			{
				"text": "Que la classe sera dédiée à des traitements métiers",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie l'annotation <code>@org.springframework.beans.factory.annotation.Configurable</code> ?",
		"topicKey": "SPRING",
		"answers": [
			{
				"text": "Que la classe sera une classe de configuration scannée par Spring",
				"goodAnswer": false
			},
			{
				"text": "Que la classe va pouvoir accepter l'injection de beans gérés par Spring",
				"goodAnswer": true
			},
			{
				"text": "Que la classe va adapter son espace émoire à l'éxécution",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie l'annotation <code>@org.springframework.context.annotation.Configuration</code> ?",
		"topicKey": "SPRING",
		"answers": [
			{
				"text": "Que la classe sera une classe de configuration scannée par Spring",
				"goodAnswer": true
			},
			{
				"text": "Que la classe va pouvoir accepter l'injection de beans gérés par Spring",
				"goodAnswer": false
			},
			{
				"text": "Que la classe va être scannée par Spring en tant que bean",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quel est l'équivalent de l'annotation <code>@org.springframework.boot.autoconfigure.SpringBootApplication</code> ?",
		"topicKey": "SPRING",
		"answers": [
			{
				"text": "<code>@Configuration @EnableAspectJAutoProxy @ComponentScan</code>",
				"goodAnswer": false
			},
			{
				"text": "<code>@Configurable @EnableAutoConfiguration @ComponentScan</code>",
				"goodAnswer": false
			},
			{
				"text": "<code>@Configuration @EnableAutoConfiguration @ComponentScan</code>",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelle est la différence entre <code>@org.springframework.context.annotation.Bean</code> et <code>@org.springframework.stereotype.Component</code> ?",
		"topicKey": "SPRING",
		"answers": [
			{
				"text": "<code>@Bean</code> est une déclaration explicite tandis que <code>@Component</code> est une déclaration implicite",
				"goodAnswer": true
			},
			{
				"text": "<code>@Component</code> est une déclaration explicite tandis que <code>@Bean</code> est une déclaration implicite",
				"goodAnswer": false
			},
			{
				"text": "<code>@Bean</code> est <code>@Deprecated</code> depuis Java 1.8",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle annotation devrait-on rencontrer au dessus des méthodes dans une classe annotée <code>@org.springframework.context.annotation.Configuration</code> ?",
		"topicKey": "SPRING",
		"answers": [
			{
				"text": "<code>@Bean</code>",
				"goodAnswer": true
			},
			{
				"text": "<code>@Component</code>",
				"goodAnswer": false
			},
			{
				"text": "<code>@Service</code>",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que fait le code suivant au dessus d'une méthode ? <java>@After(\"execution(* maMethode(..))\")</java>",
		"topicKey": "SPRING",
		"answers": [
			{
				"text": "La méthode sera exécutée à chaque fois avant que <code>maMethode()</code> ne soit appelée",
				"goodAnswer": false
			},
			{
				"text": "La méthode sera exécutée à chaque fois après que <code>maMethode()</code> ne soit appelée",
				"goodAnswer": true
			},
			{
				"text": "La méthode sera exécutée après avoir récupérer le retour de <code>maMethode()</code> ",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Lequel de ces deux types de container est de type <code>Lazy</code>",
		"topicKey": "SPRING",
		"answers": [
			{
				"text": "<code>ApplicationContext</code> ",
				"goodAnswer": false
			},
			{
				"text": "<code>BeanFactory</code> ",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Lequel de ces deux types de container sont de type <code>Eager</code>",
		"topicKey": "SPRING",
		"answers": [
			{
				"text": "<code>ApplicationContext</code>",
				"goodAnswer": true
			},
			{
				"text": "<code>BeanFactory</code>",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "D'où provient le nom Maven ?",
		"topicKey": "MAVEN",
		"answers": [
			{
				"text": "Du latin qui signifie \"moteur\"",
				"goodAnswer": false
			},
			{
				"text": "De l'indien qui signifie \"construction\"",
				"goodAnswer": false
			},
			{
				"text": "Du Yiddish qui signifie \"accumulateur\"",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelle est l'implémentation officielle de JPA ?",
		"topicKey": "JPA",
		"answers": [
			{
				"text": "Hibernate",
				"goodAnswer": false
			},
			{
				"text": "EclipseLink",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Qu'est-ce qu'une relation @javax.persistence.OneToMany ?",
		"topicKey": "JPA",
		"answers": [
			{
				"text": "Un ensemble d'objets pointant vers un objet unique",
				"goodAnswer": false
			},
			{
				"text": "Un objet pointant vers un ensemble d'objets",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Qu'est-ce qu'une relation @javax.persistence.ManyToOne ?",
		"topicKey": "JPA",
		"answers": [
			{
				"text": "Un ensemble d'objets pointant vers un objet unique",
				"goodAnswer": true
			},
			{
				"text": "Un objet pointant vers un ensemble d'objets",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "À quoi correspond la ligne suivante dans le fichier de configuration persistence.xml <code>hibernate.hbm2ddl.auto</code> ?",
		"topicKey": "JPA",
		"answers": [
			{
				"text": "À la manière dont Hibernate va exécuter le programme (update, drop-create)",
				"goodAnswer": true
			},
			{
				"text": "Au fait qu'Hibernate se lance automatiquement au lancement de l'application",
				"goodAnswer": false
			},
			{
				"text": "Au fait qu'Hibernate télécharger automatiquement les dll manquantes sur internet",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie l'annotation @javax.persistence.Transient mise sur un champ ?",
		"topicKey": "JPA",
		"answers": [
			{
				"text": "Que le champ est transitif",
				"goodAnswer": false
			},
			{
				"text": "Que le champ ne sera pas dans le context de persistence",
				"goodAnswer": true
			},
			{
				"text": "Que le champ sera automatiquement commité même s'il n'est pas dans une transaction",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie JPA ?",
		"topicKey": "JPA",
		"answers": [
			{
				"text": "Java Programming API",
				"goodAnswer": false
			},
			{
				"text": "Java Performance API",
				"goodAnswer": false
			},
			{
				"text": "Java Persistence API",
				"goodAnswer": true
			}
		]
	},
	
	{
		"text": "À quoi correspond lannotation suivante ? <java>javax.persistence.@GeneratedValue(strategy = GenerationType.IDENTITY)</java>",
		"topicKey": "JPA",
		"answers": [
			{
				"text": "Elle référence un objet grâce à son hashcode()",
				"goodAnswer": false
			},
			{
				"text": "L'Id de l'objet sera directement mappé avec la valeur de l'Id quon lui affectera manuellement",
				"goodAnswer": false
			},
			{
				"text": "Une séquence seré générée spécifiquement pour cet objet",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que fait mvn clean ?",
		"topicKey": "MAVEN",
		"answers": [
			{
				"text": "Elle effecture un build léger",
				"goodAnswer": false
			},
			{
				"text": "Elle fait du nettoyage dans les dépendances inutilisées",
				"goodAnswer": false
			},
			{
				"text": "Elle efface tous les fichiers générés par Maven",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelle est l'utilité de Maven ?",
		"topicKey": "MAVEN",
		"answers": [
			{
				"text": "Partager du code avec d'autres développeurs",
				"goodAnswer": false
			},
			{
				"text": "Rendre plus simple le processus de build, fournir un environnement uniforme et encourager les bonnes pratiques de développement",
				"goodAnswer": true
			},
			{
				"text": "Gérer les dépendances d'un projet dynamiquement",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que fait la commande mvn validate ?",
		"topicKey": "MAVEN",
		"answers": [
			{
				"text": "Vérifier si toutes les librairies nécessaires sont bien présentes",
				"goodAnswer": false
			},
			{
				"text": "Vérifier si toutes les informations du projet sont correctes",
				"goodAnswer": true
			},
			{
				"text": "Vérifier si le build s'est bien passé",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que fait la commande mvn test ?",
		"topicKey": "MAVEN",
		"answers": [
			{
				"text": "Il exécute les actions implémentées selon un framework de test déclaré dans le pom.xml",
				"goodAnswer": true
			},
			{
				"text": "Il teste l'application en vue d'un déploiement",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que fait la commande mvn package ?",
		"topicKey": "MAVEN",
		"answers": [
			{
				"text": "Il construit les différents package déclarés dans le projet",
				"goodAnswer": false
			},
			{
				"text": "Il transforme le code compilé dans un format distribuable, comme un Jar ou un War",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que fait la commande mvn install ?",
		"topicKey": "MAVEN",
		"answers": [
			{
				"text": "Il installe le projet dans le dépôt Maven local, dans l'idée d'être utilisé en tant que librairie pour d'autres projets",
				"goodAnswer": true
			},
			{
				"text": "Il transforme le code compilé dans un format distribuable, comme un Jar ou un War",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que sont les commandes auto-générées par Maven lors de la commande mvn install ?",
		"topicKey": "MAVEN",
		"answers": [
			{
				"text": "mvn validate - mvn compile - mvn test - mvn package - mvn verify - mvn install",
				"goodAnswer": true
			},
			{
				"text": "mvn validate - mvn compile - mvn test - mvn package - mvn install",
				"goodAnswer": false
			},
			{
				"text": "mvn validate - mvn compile - mvn test - mvn install",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que sont les commandes auto-générées par Maven lors de la commande mvn package ?",
		"topicKey": "MAVEN",
		"answers": [
			{
				"text": "mvn compile - mvn test - mvn package",
				"goodAnswer": false
			},
			{
				"text": "mvn validate - mvn compile - mvn test - mvn package",
				"goodAnswer": true
			},
			{
				"text": "mvn compile - mvn install",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est-ce l'index staging ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "Le hash correspondant à un commit",
				"goodAnswer": false
			},
			{
				"text": "L'emplacement de votre dépôt Git local",
				"goodAnswer": false
			},
			{
				"text": "L'emplacement où sont placés les fichiers versionnés prêt à être commiter",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que fait <code>git checkout -b mabranche</code> ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "Cela permet de créer une nouvelle branche et pointer dessus",
				"goodAnswer": true
			},
			{
				"text": "Cela permet de pointer vers une branche existante",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que fait <code>git rm [fichier] --cached ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "Cela va supprimer le fichier de l'index",
				"goodAnswer": false
			},
			{
				"text": "Cela va supprimer le fichier de l'index mais le garder dans le working tree",
				"goodAnswer": true
			},
			{
				"text": "Cela va supprimer le fichier du dépôt local",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "À quoi sert la commande <code>git cherry-pick <commit-hash></code> ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "À choisir un commit et de le placer à la place du commit actuel",
				"goodAnswer": true
			},
			{
				"text": "À ajouter les différences d'un commit choisi par rapport au commit actuel",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quel est la différence entre les commandes git rebase et git merge ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "git rebase place le commit souhaité au niveau du commit actuel, tandis que git merge va créer un nouveau commit pour la fusion des deux branches",
				"goodAnswer": false
			},
			{
				"text": "Ce sont deux façons de faire différentes pour le même résultat",
				"goodAnswer": false
			},
			{
				"text": "git rebase place le commit actuel au niveau du commit souhaité, tandis que git merge va créer un nouveau commit pour la fusion des deux branches",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Comment démarre-t-on un dépôt Git en local ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "git init",
				"goodAnswer": true
			},
			{
				"text": "git status",
				"goodAnswer": false
			},
			{
				"text": "git clone",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Comment rapatrie-t-on un dépôt Git distant sur sa propre machine ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "git init",
				"goodAnswer": false
			},
			{
				"text": "git remote",
				"goodAnswer": false
			},
			{
				"text": "git clone",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Qu'effectue la commande git commit ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "Elle déplace les fichiers présents dans l'index et les place dans un nouveau noeud appelé commit",
				"goodAnswer": true
			},
			{
				"text": "Elle enregistre les modifications effectuées en local",
				"goodAnswer": false
			},
			{
				"text": "Elle envoie les dernières modifications vers les dépôt distant",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie <code>-u</code> dans la commande <code>git push -u origin master</code> ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "<code>--unique</code>",
				"goodAnswer": false
			},
			{
				"text": "<code>--set-upstream</code>",
				"goodAnswer": true
			},
			{
				"text": "<code>--utf-8</code>",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la différence entre git pull et git fetch ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "git pull effectue les commandes git fetch et git merge",
				"goodAnswer": true
			},
			{
				"text": "git pull récupère un commit local tandis que git fetch récupère les modifications d'un dépôt distant",
				"goodAnswer": false
			},
			{
				"text": "git fetch récupère un commit local tandis que git pull récupère les modifications d'un dépôt distant",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que se passe-t-il si vous créez un nouveau dépôt Git en remote avec un commit, et que vous créez son équivalent local et que vous effectuez la commande git push après avoir commité ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "Git va vous informer que les deux commits nont pas de commits en commun",
				"goodAnswer": true
			},
			{
				"text": "Le push va bien se passer",
				"goodAnswer": false
			},
			{
				"text": "Git va vous informer que vous n'êtes pas à jour par rapport au dépôt distant",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est-ce que GitHub ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "Le site officiel de téléchargement de Git",
				"goodAnswer": false
			},
			{
				"text": "Un site de dépôt distant utilisant le moteur de Git",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que fait la commande <code>git add remote origin git@github.com/mon-depot.git</code> ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "Cela va récupérer un dépôt distant pour créer un dépôt en local",
				"goodAnswer": false
			},
			{
				"text": "Cela va affecter un dépôt distant appelé origin pour le dépôt local Git sur lequel vous travaillez",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que fait la commande <code>git add .</code> ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "Cela va ajouter à l'index de votre dépôt tous les fichiers contenus dans le dossier où vous pointez",
				"goodAnswer": true
			},
			{
				"text": "Cela va initialiser un dépôt Git dans le dossier où vous pointez",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle commande vous permet d'observer les modifications effectuées sur des fichiers encore non commités ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "git checkout",
				"goodAnswer": false
			},
			{
				"text": "git status",
				"goodAnswer": false
			},
			{
				"text": "git diff",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelle commande vous permet d'observer les fichiers ajoutés, modifiés ou supprimés avant un <code>commit</code> ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "git checkout",
				"goodAnswer": false
			},
			{
				"text": "git status",
				"goodAnswer": true
			},
			{
				"text": "git diff",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'effectue la commande <code>git reset --soft</code> ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "Elle modifie uniquement le pointeur HEAD",
				"goodAnswer": true
			},
			{
				"text": "Elle modifie le pointeur HEAD et l'index",
				"goodAnswer": false
			},
			{
				"text": "Elle modifie l'index et le working tree",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'effectue la commande <code>git reset --hard</code> ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "Elle modifie l'index et le working tree",
				"goodAnswer": false
			},
			{
				"text": "Elle modifie le pointeur HEAD et l'index",
				"goodAnswer": false
			},
			{
				"text": "Elle modifie le pointeur HEAD, l'index et le working tree",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelle est l'option par défaut de git reset ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "<code>--soft</code>",
				"goodAnswer": false
			},
			{
				"text": "<code>--mixed</code>",
				"goodAnswer": true
			},
			{
				"text": "<code>--keep</code>",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'effectue la commande git stash ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "Elle affecte un tag à un commit",
				"goodAnswer": false
			},
			{
				"text": "Elle enregistre des modifications qui ne doivent pas être commités tout de suite",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Qu'effectue la commande gitk ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "Elle récupère le <code><commit-hash></code> d'un commit",
				"goodAnswer": false
			},
			{
				"text": "Elle ouvre l'interface graphique du dépôt local",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que fait la commande <code>git clone git@github.com/mon-depot.git</code> ?",
		"topicKey": "GIT",
		"answers": [
			{
				"text": "Cela va rapatrier un dépôt distant vers un dépôt local qui sera créé à l'emplacement où vous pointez",
				"goodAnswer": true
			},
			{
				"text": "Cela va cloner un dépôt local existant à l'emplacement où vous pointez",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quel est le principe du Memento ?",
		"topicKey": "DESIGN_PATTERNS",
		"answers": [
			{
				"text": "Il est utilisé pour restaurer l'état d'un objet à un moment donné",
				"goodAnswer": true
			},
			{
				"text": "Il est utilsiée pour garder une sauvegarde de la base de données",
				"goodAnswer": false
			},
			{
				"text": "Il est utilisé pour économiser de la mémoire",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quels sont les trois grands types de Design Patterns ?",
		"topicKey": "DESIGN_PATTERNS",
		"answers": [
			{
				"text": "Les patterns de construction, de structure et de comportement",
				"goodAnswer": true
			},
			{
				"text": "Les patterns de construction, de structure et de stratégie",
				"goodAnswer": false
			},
			{
				"text": "Les patterns de construction, de décoration et de stratégie",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quel est le principe de la Factory ?",
		"topicKey": "DESIGN_PATTERNS",
		"answers": [
			{
				"text": "Elle va nous permettre de dissocier la création des objets concrets de leur utilisation",
				"goodAnswer": false
			},
			{
				"text": "Elle permet de fournir un ensemble de classes à un client qui n'a pas à connaître la classe concrète des objets instanciés",
				"goodAnswer": true
			},
			{
				"text": "Elle va permettre de fournir des objets en masse",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quel sont les trois grands types de l'Abstract Factory ?",
		"topicKey": "DESIGN_PATTERNS",
		"answers": [
			{
				"text": "Elle va nous permettre de dissocier la création des objets concrets de leur utilisation",
				"goodAnswer": true
			},
			{
				"text": "Elle permet de fournir un ensemble de classes à un client qui n'a pas à connaître la classe concrète des objets instanciés",
				"goodAnswer": false
			},
			{
				"text": "Elle va permettre de fournir des objets en masse",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quel est le principe de l'Observer ?",
		"topicKey": "DESIGN_PATTERNS",
		"answers": [
			{
				"text": "Il est utilisé pour logger avec AspectJ",
				"goodAnswer": false
			},
			{
				"text": "Il est utilisé pour observer le code et y trouver des problèmes de conception",
				"goodAnswer": false
			},
			{
				"text": "Il est utilisé pour notifier les objets qui sont en relation directe avec un objet de ces modifications",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quel est le principe du Singleton ?",
		"topicKey": "DESIGN_PATTERNS",
		"answers": [
			{
				"text": "Il ne sera instancié qu'une seule fois durant l'éxécution",
				"goodAnswer": true
			},
			{
				"text": "Il ne contient qu'une méthode",
				"goodAnswer": false
			},
			{
				"text": "Il ne contient qu'un attribut",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quel est le principe du Prototype ?",
		"topicKey": "DESIGN_PATTERNS",
		"answers": [
			{
				"text": "Il est utilisée pour concevoir un objet",
				"goodAnswer": false
			},
			{
				"text": "C'est une application encore en développement",
				"goodAnswer": false
			},
			{
				"text": "Il est utile pour dupliquer (cloner) des objets tout en conservant un niveau de performance",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quel est le principe de la Facade ?",
		"topicKey": "DESIGN_PATTERNS",
		"answers": [
			{
				"text": "Simuler l'existence d'un objet pour effectuer des tests sur une fonctionnalité",
				"goodAnswer": false
			},
			{
				"text": "Créer une interdiction d'entrer sans mot de passe",
				"goodAnswer": false
			},
			{
				"text": "Créer un niveau d'abstraction entre l'ensemble des classes et celles qui souhaitent les utiliser en proposant une interface de plus haut niveau pour utiliser les classes du sous-système",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quel est le principe de la Strategy ?",
		"topicKey": "DESIGN_PATTERNS",
		"answers": [
			{
				"text": "Mettre en place une stratégie pour économiser de la mémoire",
				"goodAnswer": false
			},
			{
				"text": "Adapter un algorithme en fonction du context",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quel est le principe du Composite ?",
		"topicKey": "DESIGN_PATTERNS",
		"answers": [
			{
				"text": "Il permet de concevoir une structure arborescente et d'effectuer des actions dessus comme s'il s'agissait d'un seul objet",
				"goodAnswer": true
			},
			{
				"text": "Il permet d'ajouter dynamiquement des fonctionnalités à un programme sans se soucier de la nature de l'objet",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quel est le principe de l'Adapter ?",
		"topicKey": "DESIGN_PATTERNS",
		"answers": [
			{
				"text": "Il permet de modifier le comportement d'un sous système sans modifier structurellement le système en place",
				"goodAnswer": true
			},
			{
				"text": "Adapter un algorithme en fonction du context",
				"goodAnswer": false
			},
			{
				"text": "Il est utilisé pour notifier les objets qui sont en relation directe avec un objet de ces modifications",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est-ce que Cucumber ?",
		"topicKey": "FRAMEWORKS",
		"answers": [
			{
				"text": "Un framework de parsing pour XML",
				"goodAnswer": false
			},
			{
				"text": "Un framework de tests automatisés",
				"goodAnswer": true
			},
			{
				"text": "Un framework pour générer automatiquement les getters/setters",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est-ce que Junit ?",
		"topicKey": "FRAMEWORKS",
		"answers": [
			{
				"text": "Un framework de tests",
				"goodAnswer": true
			},
			{
				"text": "Un framework de bases de données",
				"goodAnswer": false
			},
			{
				"text": "Un framework de Web Services",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est-ce que Lombok Project ?",
		"topicKey": "FRAMEWORKS",
		"answers": [
			{
				"text": "Un framework de Web Services",
				"goodAnswer": false
			},
			{
				"text": "Un framework qui génère automatiquement les getters/setters",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Qu'est-ce que Jax-RS ?",
		"topicKey": "FRAMEWORKS",
		"answers": [
			{
				"text": "Un framework de Web Services",
				"goodAnswer": true
			},
			{
				"text": "Un framework de bases de données",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est-ce que Restlet ?",
		"topicKey": "FRAMEWORKS",
		"answers": [
			{
				"text": "Un framework de Web Services",
				"goodAnswer": true
			},
			{
				"text": "Un framework de parsing XML",
				"goodAnswer": false
			}
		]
	},
	
	{
		"text": "Qu'est-ce que Servlet ?",
		"topicKey": "FRAMEWORKS",
		"answers": [
			{
				"text": "Une classe Java qui va intercepter les méthodes POST, GET ou PUT",
				"goodAnswer": true
			},
			{
				"text": "Un serveur local qui va faire tourner un programme",
				"goodAnswer": false
			}
		]
	},
	
	{
		"text": "Qu'est-ce que Jackson ?",
		"topicKey": "FRAMEWORKS",
		"answers": [
			{
				"text": "Un framework pour parser des fichiers XML",
				"goodAnswer": false
			},
			{
				"text": "Un framework de test",
				"goodAnswer": false
			},
			{
				"text": "Un framework pour serialiser/déserialiser des objets",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Qu'est-ce que SAXParser ?",
		"topicKey": "FRAMEWORKS",
		"answers": [
			{
				"text": "Un framework pour parser des fichiers JSON",
				"goodAnswer": false
			},
			{
				"text": "Un framework pour parser des fichiers XML",
				"goodAnswer": true
			},
			{
				"text": "Un framework pour parser des fichiers YML",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie JSP ?",
		"topicKey": "FRAMEWORKS",
		"answers": [
			{
				"text": "Java Server Programming",
				"goodAnswer": false
			},
			{
				"text": "Java Server Pages",
				"goodAnswer": true
			},
			{
				"text": "Java Server Processing",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelles sont les deux manières d'appeler la méthode GET d'une servlet depuis du code HTML ?",
		"topicKey": "FRAMEWORKS",
		"answers": [
			{
				"text": "Via tag contenant un attribut <code>onclick=\"servletName\"</code>",
				"goodAnswer": false
			},
			{
				"text": "Via un tag form ou via un tag a",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que signifie JSF ?",
		"topicKey": "FRAMEWORKS",
		"answers": [
			{
				"text": "Java Server Forms",
				"goodAnswer": false
			},
			{
				"text": "Java Server Facets",
				"goodAnswer": false
			},
			{
				"text": "Java Server Faces",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Dans quel framework rencontre-t-on les annotations <code>@Given</code>, <code>@When</code>, <code>@And</code>, <code>@Then</code> ?",
		"topicKey": "FRAMEWORKS",
		"answers": [
			{
				"text": "JUnit",
				"goodAnswer": false
			},
			{
				"text": "Cucumber",
				"goodAnswer": true
			},
			{
				"text": "AspectJ",
				"goodAnswer": false
			}
		]
	},
	
	{
		"text": "Quel est léquivalent de l'annotation <code>@javax.inject.Inject</code> ?",
		"topicKey": "FRAMEWORKS",
		"answers": [
			{
				"text": "<code>@org.springframework.stereotype.Component<code>",
				"goodAnswer": false
			},
			{
				"text": "<code>@org.springframework.beans.factory.annotation.Autowired</code>",
				"goodAnswer": true
			},
			{
				"text": "<code>@javax.inject.Named</code>",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle méthoed permet de retirer le dernier élément d'une liste ?",
		"topicKey": "JAVASCRIPT",
		"answers": [
			{
				"text": "<code>Array.prototype.pop()</code>",
				"goodAnswer": true
			},
			{
				"text": "<code>Array.prototype.unshift()</code>",
				"goodAnswer": false
			},
			{
				"text": "<code>Array.prototype.shift()</code>",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que signifie PL/SQL ?",
		"topicKey": "SQL",
		"answers": [
			{
				"text": "Procedure Language / Structured Query Language",
				"goodAnswer": true
			},
			{
				"text": "Programming Language / Structured Query Language",
				"goodAnswer": false
			},
			{
				"text": "Professionnal Language / Structured Query Language",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Comment efface-t-on les données une table ?",
		"topicKey": "SQL",
		"answers": [
			{
				"text": "<code>DROP TABLE [table];</code>",
				"goodAnswer": false
			},
			{
				"text": "<code>TRUNCATE TABLE [table];</code>",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Comment supprime-t-on une table ?",
		"topicKey": "SQL",
		"answers": [
			{
				"text": "<code>DROP TABLE [table];</code>",
				"goodAnswer": true
			},
			{
				"text": "<code>TRUNCATE TABLE [table];</code>",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Comment affiche-t-on un titre de colonne au résultat d'une requête ?",
		"topicKey": "SQL",
		"answers": [
			{
				"text": "<code>SELECT colonne1 AS NOM_COLONNE_1, colonne2 AS NOM_COLONNE_2...</code>",
				"goodAnswer": true
			},
			{
				"text": "<code>SELECT colonne1 ALIAS NOM_COLONNE_1, colonne2 ALIAS NOM_COLONNE_2...</code>",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est-ce qu'une <code>NATURAL JOIN</code> ?",
		"topicKey": "SQL",
		"answers": [
			{
				"text": "Une jointure sur un champ commun à deux tables sans restriction",
				"goodAnswer": true
			},
			{
				"text": "Une jointure sur un champ commun à deux tables à condition d'avoir une correspondance exacte sur le champ",
				"goodAnswer": false
			},
			{
				"text": "Une jointure retournant le produit cartésien de deux tables",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est-ce qu'une <code>CROSS JOIN</code> ?",
		"topicKey": "SQL",
		"answers": [
			{
				"text": "Une jointure retournant le produit cartésien de deux tables",
				"goodAnswer": false
			},
			{
				"text": "Une jointure sur un champ commun à deux tables à condition d'avoir une correspondance exacte sur le champ",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que fait la requête suivante ? <java>SELECT * FROM table1</java><java>UNION</java><java>SELECT * FROM table2</java>",
		"topicKey": "SQL",
		"answers": [
			{
				"text": "Elle permet de mettre bout-à-bout le résultat de deux requêtes différentes, à condition que les deux tables aient le même nombre de colonnes, qu'elles soient de même type et dans le même ordre",
				"goodAnswer": false
			},
			{
				"text": "Elle permet de mettre bout-à-bout le résultat de deux requêtes différentes sans doublons, à condition que les deux tables aient le même nombre de colonnes, qu'elles soient de même type et dans le même ordre",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que fait la requête suivante ? <java>SELECT * FROM table1</java><java>UNION ALL</java><java>SELECT * FROM table2</java>",
		"topicKey": "SQL",
		"answers": [
			{
				"text": "Elle permet de mettre bout-à-bout le résultat de deux requêtes différentes, à condition que les deux tables aient le même nombre de colonnes, qu'elles soient de même type et dans le même ordre",
				"goodAnswer": true
			},
			{
				"text": "Elle permet de mettre bout-à-bout le résultat de deux requêtes différentes sans doublons, à condition que les deux tables aient le même nombre de colonnes, qu'elles soient de même type et dans le même ordre",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la différence entre <code>RIGHT JOIN</code> et <code>RIGHT OUTER JOIN</code> ? ",
		"topicKey": "SQL",
		"answers": [
			{
				"text": "<code>RIGHT JOIN</code> récupère aussi l'intersection des deux tables",
				"goodAnswer": false
			},
			{
				"text": "Aucune, les deux écritures sont équivalentes",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Qu'est-ce que <none>Stack Over Flow ?",
		"topicKey": "DIVERS",
		"answers": [
			{
				"text": "La pile d'appel d'un programme Java",
				"goodAnswer": false
			},
			{
				"text": "Une plate-forme d'entraide pour les développeurs",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que signifie REST ?",
		"topicKey": "DIVERS",
		"answers": [
			{
				"text": "Representational Stateful Transfert",
				"goodAnswer": true
			},
			{
				"text": "Representational Stateless Transfert",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est que Gradle ?",
		"topicKey": "DIVERS",
		"answers": [
			{
				"text": "Un équivalent de Maven",
				"goodAnswer": true
			},
			{
				"text": "Un équivalent de Git",
				"goodAnswer": false
			},
			{
				"text": "Un équivalent de Tomcat",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "À quoi servent les fichiers CSS ?",
		"topicKey": "DIVERS",
		"answers": [
			{
				"text": "À faire tourner du code javascript",
				"goodAnswer": false
			},
			{
				"text": "À conserver les cookies du navigateur",
				"goodAnswer": false
			},
			{
				"text": "À customiser les éléments du front",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que signifie CSS ?",
		"topicKey": "DIVERS",
		"answers": [
			{
				"text": "Custom Serialized Sheets",
				"goodAnswer": false
			},
			{
				"text": "Cascading Style Sheets",
				"goodAnswer": true
			},
			{
				"text": "Customed Style Sheets",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est-ce qu'Heroku ?",
		"topicKey": "DIVERS",
		"answers": [
			{
				"text": "Une version d'Eclipse",
				"goodAnswer": false
			},
			{
				"text": "Un framework de gestion de bases de données",
				"goodAnswer": false
			},
			{
				"text": "Une plate-forme de déploiement",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que signifie l'extension *.war ?",
		"topicKey": "DIVERS",
		"answers": [
			{
				"text": "Web Archive",
				"goodAnswer": true
			},
			{
				"text": "Web Rar",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est-ce que Tomcat ?",
		"topicKey": "DIVERS",
		"answers": [
			{
				"text": "Un framework de bases de données",
				"goodAnswer": false
			},
			{
				"text": "Un serveur d'application Java",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que signifie ORM ?",
		"topicKey": "DIVERS",
		"answers": [
			{
				"text": "<none>Object Relational Mapping",
				"goodAnswer": true
			},
			{
				"text": "<none>Object Related Mapping",
				"goodAnswer": false
			},
			{
				"text": "<none>Object Representational Model",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quel est le moyen le plus simple et le plus connu d'effectuer un tri sur liste de petite taille ?",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Le tri par fusion",
				"goodAnswer": false
			},
			{
				"text": "Le tri par sélection",
				"goodAnswer": false
			},
			{
				"text": "Le tri par bulles",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Qu'est-ce qu'une méthode récursive ?",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Une méthode avec un retour",
				"goodAnswer": false
			},
			{
				"text": "Une méthode qui s'appelle elle-même",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que signifie qu'une méthode est symétrique pour deux objets <code>a</code> et <code>b</code> ?",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Que les retours de <code>a.methode(a)</code> et de <code>a.methode(a)</code> sont équivalents",
				"goodAnswer": false
			},
			{
				"text": "Que <code>a.methode(b)</code> équivaut à <code>b.methode(a)</code>",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelles sont les qualités de la méthode <code>equals(Object b)</code> appelée depuis un objet <code>a</code> ?",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Elle est réflexive, transitive et consistante",
				"goodAnswer": false
			},
			{
				"text": "Elle est réflexive, symétrique et consistante",
				"goodAnswer": false
			},
			{
				"text": "Elle est réflexive, symétrique, transitive et consistante",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Qu'appelle t-on par complexité d'un algorithme ?",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Le nombre conditions vérifiées par un algorithme",
				"goodAnswer": false
			},
			{
				"text": "Le nombre d'opérations élémentaires effectuées par un algorithme",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Quelle est la complexité pour accéder à un élement k d'un tableau de taille n ?",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Complexité constante : O(1)",
				"goodAnswer": true
			},
			{
				"text": "Complexité linéaire : O(n)",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la complexité pour parcourir une liste de n éléments ?",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Complexité constante : O(1)",
				"goodAnswer": false
			},
			{
				"text": "Complexité linéaire : O(n)",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "À quoi peut bien servir cet algorithme ? <java>public static int methodeRecursive(int nombre) {</java> <java1>int x = 0; </java1><java1>if (nombre == 1) { </java1><java2>x = 1; </java2><java2>return x; </java2><java1>} else { </java1><java2>x = nombre * methodeRecursive(nombre - 1); </java2><java2>return x; </java2><java1>}</java1> <java>}</java> ",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "À calculer la suite de Fibonacci",
				"goodAnswer": false
			},
			{
				"text": "À calculer le nombre d'or",
				"goodAnswer": false
			},
			{
				"text": "À calculer une factorielle",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "À quoi peut bien servir cet algorithme ? <java>public static int getXXX(int n)  {</java> <java1>if(n == 0) </java1><java2>return 1; </java2><java1>else if(n == 1) </java1><java2>return 1;</java2><java1>else</java1> <java2>return getXXX(n - 1) + getXXX(n - 2);</java2><java>}</java> ",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "À calculer la suite de Fibonacci",
				"goodAnswer": true
			},
			{
				"text": "À calculer de puissance",
				"goodAnswer": false
			},
			{
				"text": "À calculer une factorielle",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "À quoi peut bien servir cet algorithme ? <java>public static double getXXX(int nombre) {</java> <java1>double X0 = 1; </java1><java1>double Xn = (X0 + nombre / X0) / 2; </java1><java1>double Xn_Plus_1 = 0; </java1><java1>for (int i = 0; i < 10; i++) { </java1><java2>Xn_Plus_1 = (Xn + nombre / Xn) / 2; </java2><java2>Xn = Xn_Plus_1; </java2><java1>}</java1><java1>return Xn_Plus_1;</java1><java>}</java> ",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "À calculer la suite de Fibonacci",
				"goodAnswer": true
			},
			{
				"text": "À calculer une racine carrée par la méthode de Newton",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "À quoi peut bien servir cet algorithme ? <java>public static int methodeRecursive(int n, int m) {</java><java1>if (m == 0) </java1><java2>return 1; </java2><java1>return n * methodeRecursive(n, m - 1); </java1><java>}</java> ",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "À calculer la suite de Fibonacci",
				"goodAnswer": false
			},
			{
				"text": "À calculer une puissance",
				"goodAnswer": true
			},
			{
				"text": "À calculer une factorielle",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "De quel type d'algorithme de tri s'agit-il ? <java>public static int[] getOrderedIntegers(int[] integers) {</java> <java1>boolean trie = false; </java1><java1>int tmp; </java1><java1>while (!trie) {</java1><java2>trie = true; </java2><java2>for (int i = 0; i < integers.length - 1; i++) { </java2><java3>if (integers[i] > integers[i + 1]) {</java3><java4>tmp = integers[i + 1];</java4><java4>integers[i + 1] = integers[i];</java4><java4>integers[i] = tmp;</java4><java4>trie = false;</java4><java3>}</java3><java2>} </java2><java1>}</java1><java1>return integers;</java1><java>}</java>",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Le tri par bulles",
				"goodAnswer": true
			},
			{
				"text": "Le tri par sélection",
				"goodAnswer": false
			},
			{
				"text": "Le tri par insertion",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "De quel type d'algorithme de tri s'agit-il ? <java>public static int[] getOrderedIntegers(int[] integers) {</java> <java1>int key ; </java1><java1>for (int i = 1; i < integers.length ; i++) { </java1><java2>key = integers[i]; </java2><java2>for (int j = i ; j > 0 ; j--) { </java2><java3>if(key < integers[j -1]) {</java3><java4>integers[j] = integers[j - 1];</java4><java4>integers[j - 1] = key;</java4><java3>}</java3><java2>} </java2><java1>}</java1><java1>return integers;</java1><java>}</java>",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Le tri par bulles",
				"goodAnswer": false
			},
			{
				"text": "Le tri par fusion",
				"goodAnswer": false
			},
			{
				"text": "Le tri par insertion",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "De quel type d'algorithme de tri s'agit-il ? <java>public static int[] getOrderedIntegers(int[] integers) {</java> <java1>int i, j, min, tmp; </java1><javaCR></javaCR><java1>for (i = 0 ; i < integers.length - 1 ; i++) { </java1><java2>min = i; </java2><javaCR></javaCR><java2>for (j = i + 1; j < integers.length; j++) { </java2><java3>if (integers[j] < integers[min]) {</java3><java4>min = j ;</java4><java3>}</java3><java2>} </java2><javaCR></javaCR><java2>if (min != integers[i]) { </java2><java3>tmp = integers[min];</java3><java3>integers[min] = integers[i];</java3><java3>integers[i] = tmp;</java3><java2>} </java2><java1>}</java1><java1>return integers;</java1><java>}</java>",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Le tri par bulles",
				"goodAnswer": false
			},
			{
				"text": "Le tri par fusion",
				"goodAnswer": false
			},
			{
				"text": "Le tri par sélection",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "À quoi peut bien servir cet algorithme ? <java>public static int getXXX(int n, int m) {</java> <java1>int accumulator = 1; </java1><java1>for (int i = 0; i < m; i++) { </java1><java2>accumulator *= n; </java2><java1>}</java1><java1>return accumulator;</java1><java>}</java> ",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "À calculer la suite de Fibonacci",
				"goodAnswer": false
			},
			{
				"text": "À calculer une puissance",
				"goodAnswer": true
			},
			{
				"text": "À calculer une factorielle",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quel fût le premier algorithme moderne ? ",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Le calcul de la racine carrée par Newton",
				"goodAnswer": false
			},
			{
				"text": "Le calcul du PGCD par Euclide",
				"goodAnswer": true
			},
			{
				"text": "La pascaline en 1 642",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "D'où provient le mot algorithmie ? ",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "D'Al Khuwarizmi, un mathématicien perse du XIème siècle",
				"goodAnswer": true
			},
			{
				"text": "Du grec algos (singulier) et rythmos (cadence)",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est ce qu'une équation diphantienne ? ",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Une équation polynomiale à une ou plusieurs inconnues  dont les solutions sont cherchées parmi les nombres entiers",
				"goodAnswer": true
			},
			{
				"text": "Une équation différentielle du second dégré",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Qu'est ce que la calculabilité d'un algorithme ? ",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Le temps moyen de résolutio d'un algorithme sans se soucier du support",
				"goodAnswer": false
			},
			{
				"text": "La capacité à résoudre un algorithme sans prendre en compte le temps d'exécution",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que permet de déterminer cet algorithme ? <java>public static boolean isXXX(int n) {</java><java1>boolean isXXX = true; </java1><java1>if (n < 0) { </java1><java2>isXXX = false; </java2><java1>} else if (n != 0 && n != 1) {</java1><java2>for (int i = 2; i <= n / 2; i++) { </java2><java3>if (n != i && n % i == 0) { </java3><java4>isXXX = false; </java4><java4>break; </java4><java3>} </java3><java2>} </java2><java1>} </java1><java1>return isXXX;</java1><java>}</java>",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Si un nombre est pair",
				"goodAnswer": false
			},
			{
				"text": "Si un nombre est premier",
				"goodAnswer": true
			}
		]
	},
	{
		"text": "Que permet de déterminer cet algorithme ? <java>public static boolean isXXX(int n) {</java> <java1>boolean isXXX = true; </java1><javaCR></javaCR><java1>if (n % 2 == 0) { </java1><java2>isXXX = false; </java2><java1>}</java1><java1>return isXXX;</java1><java>}</java>",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Si un nombre est pair",
				"goodAnswer": false
			},
			{
				"text": "Si un nombre est impair",
				"goodAnswer": true
			},
			{
				"text": "Si un nombre est premier",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la complexité moyenne d'un algorithme de tri par insertion ?",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Complexité linéaire : O(n)",
				"goodAnswer": false
			},
			{
				"text": "Complexité quadratique : O(n^2)",
				"goodAnswer": true
			},
			{
				"text": "Complexité cubique : O(n^3)",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Quelle est la complexité dans le meilleur cas d'un algorithme de tri par insertion ?",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Complexité linéaire : O(n)",
				"goodAnswer": true
			},
			{
				"text": "Complexité quadratique : O(n^2)",
				"goodAnswer": false
			},
			{
				"text": "Complexité cubique : O(n^3)",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que calcule cet algorithme ? <java>public static int getXXX(int m, int n) {</java> <javaCR></javaCR><java1>while(m != n) { </java1><java2>if(m > n) { </java2><java3>m = m - n; </java3><java2>} else { </java2><java3>n = n - m;</java3><java2>} </java2><java1>} </java1><javaReturn>return m; </javaReturn><java>}</java> ",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Le PGCM",
				"goodAnswer": true
			},
			{
				"text": "Le PGCD",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que calcule cet algorithme ? <java>public static int getXXX(int m, int n) {</java> <javaCR></javaCR><java1>if(m == n) { </java1><java2>return m; </java2><java1>} else { </java1><java2>if (m > n) { </java2><java3>return getXXX(m - n, n);</java3><java2>} else { </java2><java3>return getXXX(m, n - m);</java3><java2>} </java2><java1>} </java1><java>}</java> ",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "Le PGCM",
				"goodAnswer": true
			},
			{
				"text": "Le PGCD",
				"goodAnswer": false
			},
			{
				"text": "Si un nombre est premier",
				"goodAnswer": false
			}
		]
	},
	{
		"text": "Que retourne cet algorithme récursif ? <java>public static void main(String[] args) {</java> <javaCR></javaCR> <java1>int k = 7;</java1> <java1>int p = k / 2;</java1> <java1>boolean isXXX = isXXX(k, p);</java1> <javaCR></javaCR> <java1>public static boolean isXXX(int k, int p) {</java1> <javaCR></javaCR><java1>if (p == 1) {</java1> <java2>return true;</java2><java1>} else {</java1> <java2>if (k % p == 0) {</java2><java3>return false; </java3><java2>} else {</java2><java3>return isXXX(k, p - 1); </java3><java2>}</java2><java1>}</java1><java>}</java>",
		"topicKey": "ALGO",
		"answers": [
			{
				"text": "true",
				"goodAnswer": true
			},
			{
				"text": "false",
				"goodAnswer": false
			}
		]
	}
]
